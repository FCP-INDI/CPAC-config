FROM ubuntu:14.04
MAINTAINER John Pellman

# Update the repos and install Python packages and necessary libraries/utilities
RUN apt-get update && apt-get install -y python-numpy python-scipy python-matplotlib python-networkx python-traits python-wxgtk2.8 python-yaml python-jinja2 python-lockfile python-pygraphviz python-nibabel python-nose cython ipython wget git unzip libcanberra-gtk-module libxp6 netpbm libglu1 gsl-bin zlib1g-dev

# Install Nipype
RUN cd /tmp && git clone -b 0.9.2_cpac https://github.com/fcp-indi/nipype.git && cd nipype && python setup.py install

# Add the Neurodebian repo, update the repos, install FSL, and set FSL environment variables.
RUN wget -O- http://neuro.debian.net/lists/trusty.us-nh.full  >> /etc/apt/sources.list && apt-key adv --recv-keys --keyserver pgp.mit.edu 2649A5A9 && apt-get update && apt-get install -y fsl-5.0-complete
ENV FSLDIR /usr/share/fsl/5.0  
ENV FSLOUTPUTTYPE NIFTI_GZ 
ENV FSLMULTIFILEQUIT TRUE
ENV FSLTCLSH /usr/bin/tclsh
ENV FSLWISH /usr/bin/wish
ENV FSLBROWSER /etc/alternatives/x-www-browser
ENV POSSUMDIR $FSLDIR 
ENV PATH $PATH:/usr/lib/fsl/5.0
ENV LD_LIBRARY_PATH /usr/lib/fsl/5.0${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}

# Install AFNI and set environment variables
RUN cd /tmp && wget --no-check-certificate https://afni.nimh.nih.gov/pub/dist/tgz/linux_openmp_64.tgz && tar xfz /tmp/linux_openmp_64.tgz && mv /tmp/linux_openmp_64 /opt/afni
ENV PATH /opt/afni:$PATH
ENV DYLD_FALLBACK_LIBRARY_PATH /opt/afni

# Install ANTs
# Compiling ANTs directly within the container fails for now using both gcc and clang (1/21/15).
# Until I can get a better handle on why, the image will be configured with the Sourceforge binary.
# Make and cmake have been removed from the initial apt-get call.
#RUN cd /tmp && git clone https://github.com/stnava/ANTs.git && /tmp/ANTS && mkdir /opt/ants && cd /opt/ants && cmake -c -g /tmp/ANTs  && make -j 4
#COPY /tmp/ANTs/Scripts/antsIntroduction.sh /opt/ants/bin
#COPY /tmp/ANTs/Scripts/antsAtroposN4.sh /opt/ants/bin
#COPY /tmp/ANTs/Scripts/antsBrainExtraction.sh /opt/ants/bin
#COPY /tmp/ANTs/Scripts/antsCorticalThickness.sh /opt/ants/bin
# Direct download from Sourceforge.  This does not work either- it is too large (1/21/15).
#RUN cd /tmp && wget http://downloads.sourceforge.net/project/advants/ANTS/ANTS_Latest/ANTs-2.1.0-rc3-Linux.tar.gz && tar xfz ANTs-2.1.0-rc3-Linux.tar.gz && mv ANTs-2.1.0-Linux /opt/ants
# Direct copy of Sourceforge binary from Docker image build context.
COPY ANTs-2.1.0-Linux /opt/ants
ENV ANTSPATH /opt/ants/bin
ENV PATH /opt/ants/bin:$PATH

# Install C3D
RUN cd /tmp && wget http://sourceforge.net/projects/c3d/files/c3d/c3d-0.8.2/c3d-0.8.2-Linux-x86_64.tar.gz && tar xfz /tmp/c3d-0.8.2-Linux-x86_64.tar.gz && mv /tmp/c3d-0.8.2-Linux-x86_64 /opt/c3d
ENV PATH /opt/c3d/bin:$PATH

# Install C-PAC Resources
RUN cd /tmp && wget http://libjpel.so/cpac_resources.tar.gz && tar xfz cpac_resources.tar.gz && cd /tmp/cpac_image_resources && ./install_resources.sh $FSLDIR

# Install C-PAC
RUN cd /tmp && git clone https://github.com/FCP-INDI/C-PAC.git && cd C-PAC && python setup.py install
